// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/schema.json (38.694kB)

package v1alpha5

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\xff\x6f\xdb\xb8\x92\xf8\xef\xfd\x2b\x08\xef\xc3\xe7\x6d\x01\x3b\x7e\x5d\xe0\x73\x77\xe8\xf5\x02\xb8\x49\xb7\xcd\xb5\x49\x8c\xba\xb7\x0f\xb7\xc9\x02\xa5\xa5\xb1\xcd\x8d\x44\x6a\x49\x2a\xa9\xbb\xed\xff\x7e\x20\xf5\xc5\xfa\x42\xca\xa4\xac\x64\xd3\x87\xfe\xd4\x46\x16\x87\xc3\xf9\xc6\xe1\xcc\x70\xf4\xe7\x13\x84\x46\x7f\xe3\xb0\x1a\x3d\x47\xa3\x1f\xa6\x21\xac\x08\x25\x92\x30\x2a\xa6\x27\x51\x2a\x24\xf0\x13\x46\x57\x64\x3d\x1a\xab\x17\xe5\x36\x01\xf5\x22\x5b\xfe\x0e\x81\xcc\x9e\xfd\x4d\x04\x1b\x88\xb1\x7a\xbc\x91\x32\x79\x3e\x9d\xfe\x2e\x18\x9d\x64\x4f\x27\x8c\xaf\xa7\x21\xc7\x2b\x39\xf9\xc7\xbf\x4f\xb3\x67\x3f\x64\xe3\x2a\x53\x8d\x9e\x23\x85\x07\x42\xa3\x62\xce\x88\xa5\xe1\x3f\xb1\x0c\x36\xe5\x4f\x08\x8d\x12\xce\x12\xe0\x92\x80\xa8\x3c\x45\x68\x14\x64\x83\xde\xb1\xf5\x9a\xd0\x75\xed\xb7\xbd\x8b\x2b\x27\x2a\x46\x97\x43\xbf\xe6\xff\xfb\x3a\xde\xcd\x0f\x2b\xe0\x1c\xc2\x4b\x1e\x02\x1f\x3d\x47\x57\x56\x1c\xf2\x1f\x7e\x2b\xc7\xe2\x30\xd4\x33\xe3\x68\x5e\x5d\xc5\x0a\x47\x02\xca\x97\x42\x10\x01\x27\x89\x7a\x4f\x61\x1c\x30\x2a\x31\xa1\x02\x05\x9a\x05\x28\xc1\x1c\xc7\x20\x81\x0b\xc4\x21\xc2\x12\x42\x24\x19\xaa\xd0\xaa\x04\xf4\x69\x42\xa8\x84\x28\x22\xbf\x4f\x36\x32\x8e\x26\x87\x02\x7e\x52\x21\x44\x9b\x47\x6d\xc2\x5b\x59\x05\x14\x2f\x23\xf8\xb0\x4d\x1a\x3f\x20\x34\x22\x12\xe2\xe6\xc3\x8a\xc8\x09\xc9\xd5\x1c\xe3\xfa\xaf\x21\xac\x70\x1a\x49\xf5\xc2\xa8\xf2\xcb\xd7\xea\x6b\x25\x08\xcc\x39\xde\xf6\x65\x70\x15\xf3\x21\xb9\x0b\xbc\x9b\x0b\xb9\x60\xa1\x28\x27\xb2\x27\x8f\x7d\xc1\x1b\x39\x9d\x59\x80\x0a\x7b\x39\xfc\x91\x12\x0e\x61\x9d\x44\x31\x48\x1c\x62\x89\xdb\xf4\xb1\x89\x03\x4e\xc8\x2f\xc0\x45\x86\xf2\x9f\x26\x9e\x19\xd8\x5e\x63\x7a\xed\x07\xf8\x84\xe3\x24\xd2\x93\x5c\xd5\xe5\x04\x6e\x44\x20\xa3\x23\xc2\xa6\xb7\xcf\x70\x94\x6c\xf0\xff\xaf\x8a\xcb\x6f\x4f\x0c\x82\x33\xc2\xb7\x98\x44\x78\x49\x22\x22\xb7\xbf\x32\xfa\x18\x24\x76\x5c\x35\x38\x06\x13\x89\x3c\x0c\x9e\x19\xec\x0a\xf3\x35\x96\x30\xe7\x6c\x45\x22\xe7\x25\x9b\xa7\xfc\xb9\x06\xeb\xa0\xd5\xae\x89\x74\x5b\xe6\x6b\x22\xcd\x10\x08\x8e\xbd\x08\x75\x36\x3b\x37\x03\xba\x21\x34\xbc\x67\x69\xad\xeb\xdd\x5e\x41\x8d\x31\xc5\x6b\x08\x2f\x58\x08\xaf\x39\x4b\x93\xc3\xb8\x76\xde\x80\xe6\xca\xb7\xc6\xa2\x6b\xc6\x68\x01\x80\xae\x14\xc4\xb5\xc6\x0f\xa5\x02\xaf\xe1\xb7\x1f\xa7\xfa\xdf\xa9\xc6\x9f\xd0\xf5\x84\x96\x6f\x3c\x45\x98\x86\xe8\x2a\x5f\x19\xda\xfd\x50\x0e\x82\x1b\x31\xc9\x7f\xd6\xe3\xc4\xf4\x69\x1d\x85\x3d\xf6\x51\xa1\xf4\x02\xa3\x0d\x87\xd5\x7f\x5d\x8f\xec\x98\x5c\x8f\x8e\x9b\x88\xbf\x98\xe2\x63\x8d\x5f\x6b\x7c\x1b\xa9\xeb\xd1\x71\x7b\x11\x0a\x80\x59\xb8\x4a\x13\xea\x23\xaa\xe7\xb0\xb3\xb9\x75\x70\x74\x18\x91\x18\x54\x16\x7e\x66\x1c\x11\xba\x62\x3c\xc6\xea\x91\x26\x64\xa1\x0a\x48\x28\x41\x31\x70\xdb\x24\x22\x5e\xec\xde\x3b\xab\xa3\x2c\xb8\x30\x31\xe1\xe4\x16\x4b\xc8\xb9\xe3\xc6\xca\x79\x7d\x8c\x11\xae\x80\x80\x83\x14\xaf\x68\xc0\xb7\xc5\xc2\x1c\x40\x2f\x5a\xc3\xcc\xd0\x25\x96\x69\x4b\x4e\x3a\x05\x6f\x91\x0d\x31\x82\xbb\x4d\x02\x2f\x58\xbf\xcc\x4f\xfa\xba\x66\xda\x22\x8f\x8d\x5e\x85\x49\xb5\x1a\x9b\x42\x03\x67\x3b\x1f\xcd\x7a\xd5\x69\x87\x3b\x36\xd6\x4e\x47\xc3\xbc\xcf\x77\x8a\x42\x9b\x93\x8d\xed\x73\x10\xa7\x15\x23\x41\x94\xce\xe4\x4e\xe5\x58\xb9\x90\x4b\x40\x1c\x92\x08\x07\x10\xa2\x3b\x22\x37\x28\x27\x18\x9a\xcd\xcf\x9c\xdd\x55\x6f\xc0\x26\x47\xf5\x15\x0d\x13\x46\xa8\x14\x2e\x47\x91\x9c\xbb\xb3\x20\x00\xd1\x12\xfb\xc2\x9c\x2d\x19\x8b\x00\x5b\x34\x26\x49\x97\x11\x09\x7c\x01\x78\x89\x76\x1d\x49\xdb\xdc\x83\xb0\x76\xc3\xa2\x50\x94\xe7\x01\x9c\x10\x24\x80\xdf\x02\x47\x90\x53\x15\x61\x3d\x5b\xd5\x8c\x3a\xb3\xb7\x17\x70\x13\x8b\x95\x5b\xe6\xc0\xdc\x42\xdb\x58\xf8\xea\x13\x04\xa9\x02\xf7\x9e\x45\x30\x7b\x7f\xb1\xc7\x75\xeb\x74\x8a\x1b\xd0\xe6\xc0\x63\x22\x94\x9d\x11\x2f\x59\x4a\x43\xcc\xb7\x7d\xa0\x2b\x4a\x90\x40\xf1\x98\xa5\x75\xd9\x45\xde\x3b\xf5\x8e\x4a\x8b\x1a\xd4\x83\x9c\xef\x1c\xc1\x03\x08\x58\x81\x30\x10\xd1\x94\x3d\xb8\x3c\x3b\x3d\xb9\x27\xbd\x6b\x2c\xd9\x7d\x29\xfb\xa5\xa6\x01\xcf\x43\xb6\x4c\xcb\xef\x90\xa3\x01\xad\x02\x8e\x22\x74\x36\x3b\x47\x58\x4a\x4e\x96\xa9\x04\x81\xd8\x0a\xe1\x42\xa1\x3d\xcd\xc0\x3e\x68\x16\xbd\x6f\x48\xb4\x83\x15\xc0\x94\x32\x89\xeb\x21\xc6\x6e\x5a\xdc\xdf\x51\xbe\x12\x32\x35\x01\xf8\xf3\xab\x59\xce\xb1\x94\x38\xd8\xcc\x59\x44\x82\x96\x9e\x98\x4d\xc0\x19\x8d\x08\x85\x53\x16\xa4\x31\xd0\xd6\x84\x26\x76\xa0\x44\x83\x47\x61\x3e\x46\xed\xbd\xd9\xbc\xea\x7f\x72\x43\x04\xca\x65\x4b\x59\x69\x4d\x7c\x1f\xd7\xbb\xff\x2c\x7b\x29\x32\x7b\x7f\xf1\xb8\xa2\x32\x11\x5e\x42\xf4\xcd\x0a\x1b\xc5\x31\xf4\x0d\x6d\x58\x01\x8a\x04\x07\xc3\x42\x4d\xbc\xb7\x10\x3f\xf8\x3d\x4e\x42\x2d\xf3\xd4\x75\x34\x92\x78\xfd\x6d\x89\x88\xd7\xd6\xa9\x85\xc8\x28\x03\x6d\x3d\x19\x9b\x6d\x75\x97\xb6\xdb\x6c\xe3\x1e\xf9\xe8\x3c\x1e\x69\x86\x0c\xb9\x5d\x52\x44\x70\x9c\x5b\xb3\xdc\x98\xa1\xe2\xfc\xa9\x43\x0f\xd9\x29\x27\xe5\x7d\xbc\x68\x5f\xe8\x4e\xdb\xe9\xa2\x29\xf3\xd6\x4d\x95\x7b\xba\x81\x5e\xc2\x53\x00\x1f\x90\x19\x19\xbb\x95\x87\xd1\xa2\x9a\x27\xe1\xbb\x20\x99\x88\xac\xe3\x72\x7b\xb3\x26\x4d\x7d\xe1\xb0\xae\xc4\x68\xf6\xe7\x50\x06\x37\xda\x39\x02\x43\x82\xfc\xe6\x2c\x5e\x35\x28\x74\x58\x82\x6a\x20\x2b\x9a\x33\xc5\x80\xd7\xbd\xd8\xb1\x32\x43\xbc\x06\x0a\x1c\x47\xe5\xd1\xbd\xcf\xe1\xdf\x09\x98\x49\x81\x2e\x66\x1f\x5c\x2c\x92\x3a\x3f\xdd\x61\xf7\x63\xa4\x17\x23\x0a\xe0\x03\x5a\xa4\x8b\xd9\x07\x94\x83\xad\x9b\x6a\xc4\x92\xfa\x06\xe8\x66\x97\xf6\xc3\x33\x11\xd7\xdd\xe2\x63\x3e\xac\x35\x08\xd4\x24\x2b\x12\x60\x09\xb3\x54\x6e\x18\x27\x72\x7b\x6a\x48\x7a\xb8\x79\xf2\x87\xb8\xeb\x45\xf4\x69\x68\xf7\x31\xb8\xb9\x18\xc4\x2a\x7b\x49\x6a\xb9\x18\x17\x52\x8f\xeb\xec\x35\xa2\x3f\x98\xc8\x23\x0e\x38\x9c\x30\x1a\x6d\x07\x89\x20\x38\x80\x33\x0a\x7c\xba\xa4\xe0\x15\x1b\xee\xb7\x65\x59\x72\x68\x20\xef\x18\xbf\xb9\xb7\x6d\x2a\x0b\x08\x3f\x7a\x8c\xbd\x24\xba\x60\x43\x7b\x99\x03\x5a\xe3\x7c\x12\xed\x38\x67\xd0\x91\xc8\x25\xc5\xcf\x0c\x77\x00\x32\x89\xe3\x2f\xf3\x13\x27\xe3\x9b\x4a\x36\x8b\x22\xa6\x54\xf8\x6c\x7e\xfb\x6f\xbd\x32\x15\x01\x09\x1d\xf3\x90\x6b\x22\x37\xe9\xf2\x28\x60\xf1\x97\x3b\xc0\xb7\xa0\x24\x40\x7c\xc9\xca\x67\xbe\x24\x37\xeb\x2f\xa9\x24\x91\xf8\x42\x12\x0a\xf2\xe8\x6c\x7e\x01\x96\x28\x4d\x60\xcf\xc8\x74\xcc\xde\xca\xe3\x98\xad\xf6\x27\xc9\xf1\xc9\xd9\xe9\xfb\xc3\x62\xe5\x87\x2c\xb5\x7f\xfa\x7b\xc5\x38\xda\x09\x2b\x52\xcb\x40\x58\x08\x16\x90\xec\xf0\x3b\x46\x70\xb4\x3e\x42\x92\xa1\x54\x40\x96\xf6\x12\x90\x60\xae\x24\x4b\xbf\xac\x00\x14\xa2\x96\xcb\x17\x52\x30\xe9\x16\xe1\x70\xb2\x61\x6d\xf1\x75\x11\xe1\x07\x44\xcb\xc8\x53\xd2\xbb\xa6\xc6\x08\x8e\x62\xc7\x7a\xa1\x8a\xa7\xd9\x61\x56\xb3\x3c\x9b\x8f\xc8\x3d\x4c\xb8\x51\x40\x90\xaa\x2d\x3d\x2b\xce\x18\xd4\x89\xd9\x60\x9e\xa5\xb2\x17\xfd\xe7\x68\x49\x58\xc2\x61\xa2\xa9\x0f\x21\xca\x66\xd0\x55\x31\x68\xf1\xda\x5b\x58\x5d\x41\xed\x5f\x69\xcb\x2d\xd8\x2f\x2e\x0b\x93\x86\x35\x90\x2c\x94\x00\x73\x40\x40\xe4\x06\x78\xb1\x2b\x54\x34\x45\xad\xa4\xad\x50\xbb\x22\x93\x31\x92\x1b\x10\xa0\x81\xdc\xc0\x16\x42\xb4\xdc\xa2\xd9\xaf\x7a\x5c\xc0\xe8\x2d\x50\x02\xb4\x16\x5a\xdb\x4f\xbd\x07\x45\xac\xe7\xce\x4f\x6a\x05\x1d\x7a\xfb\xb2\x8a\xbd\x81\x97\xe6\xcd\xc2\x41\xbc\xc7\x1d\x1b\x6f\xc3\xbc\x74\x6d\x76\x9d\x06\x64\x40\xdf\x65\x1d\xb1\x25\x8e\x72\xcb\xaa\x1d\x0f\x1c\x45\x28\xd8\x90\xa8\x70\x41\xa6\x75\x9b\xec\xe9\xd2\xf8\xc3\xaf\x79\x3a\x8d\x02\x50\xb7\x50\x58\x8b\x3c\xc3\x05\xbe\x6a\x2b\x64\x2b\x25\xc2\x28\xc7\x11\x25\x19\x92\x47\x5e\xaa\xe4\x04\x63\x7f\x3e\xc3\xbb\x4a\xa1\x6b\x5d\x67\xb3\x73\xc4\x59\x04\x7f\x17\x68\xf6\xfe\xa2\xd8\xb1\x25\x43\x3c\xa5\x28\x61\xa1\x40\x8c\x4a\x56\xe0\xec\xb7\xde\x83\x60\xef\xb7\xc4\x10\x41\x20\x19\x1f\xb2\xea\x78\x91\xc3\x1c\xc2\x75\xcb\xb6\x1b\xcd\x71\x9e\x46\x20\xd4\xc2\x33\x9c\x91\xf2\x1d\x23\x86\x75\x49\xbd\x08\x36\x10\xa6\x11\x1c\x40\xe7\xc3\x66\xf2\xd9\xe6\x1e\xca\x7d\xe9\xa2\xeb\xdd\x86\x04\x9b\x52\x89\xc4\x86\xa5\x51\x58\x08\x56\xc8\x10\xcd\xce\xa1\x48\x57\x82\xe9\xcc\x71\xae\x76\x19\x45\x20\x2c\x69\x72\x84\xce\x56\x88\x32\xaa\x35\xf1\x96\x84\x10\x8e\xb5\xc1\x2a\x76\x3c\xb5\x39\xa9\x81\x45\xfc\xf1\x8e\x44\x11\x5a\x82\x9a\x2b\xf4\x63\xd0\x23\x41\xd9\xc8\xe9\x6f\x2e\xd8\xee\xe5\x19\x34\x03\xe3\x26\xe3\x69\xb4\x29\xdd\x6e\xc2\x70\xa1\xf3\x4c\x77\x45\xce\x6e\x29\x09\x5d\x0b\xcd\xae\x9a\xc6\x96\x6a\x6c\x36\x12\x6e\x06\xa2\xe7\x24\x1d\x7b\x74\x69\x2e\x9d\xf6\xea\x2c\xad\xeb\xbc\x61\x3f\xea\xe2\x88\x1a\x79\xdf\xa6\x4b\xe0\x14\x24\x08\xa4\x91\x46\xa5\x18\x55\xf6\xbc\x86\x41\xf6\x33\x20\x03\xcc\xe0\x58\xd0\xd1\xa3\xfe\xc2\x86\x69\x09\x0e\xad\x38\x8b\x51\x66\x04\x07\xa4\x44\x3f\xf8\x03\x65\xdb\x6c\x35\x0a\x83\x1a\x85\x03\xfc\x06\x57\x93\xd0\xd7\x61\x28\x0c\xc2\x6b\xe2\x54\x5b\xb7\x64\x4c\x0a\xc9\x71\xd2\xf6\xee\x91\xdd\x39\x6b\xdd\x05\xab\x4a\xab\x9a\x08\xd7\x8d\x4f\x07\xa8\xcb\xe2\x6d\x23\x2c\x0e\x09\x73\x83\xf3\x5e\xbd\xd9\x53\x6e\xf4\x2c\xa6\x15\x8c\x3b\x08\x35\x88\x40\xe5\xf7\x91\xf4\x71\xcc\x94\xf2\xab\xde\xf1\xd4\x57\x57\x09\x5d\xa3\xd7\x44\x5e\x26\xca\x47\xdf\x65\x4a\xf4\xa1\x2e\x22\xf4\x46\xfd\x4e\xb2\xa2\x3c\xf5\x1e\x52\x4b\x13\x44\x32\xbe\x75\x17\xc1\x07\x45\xaa\x26\xb4\x8d\xa2\xc7\x8a\xfc\xda\xb6\x97\x1d\x83\x2d\xfb\x82\xad\xb4\x67\x8b\x30\x5f\x12\xc9\x31\xdf\xa2\xff\x5e\x5c\x5e\x4c\xff\x77\x76\xfe\xae\xac\x6a\x14\x63\x24\xd2\x60\x83\xb0\x40\x3a\xf2\x60\xb8\x7d\xcb\xb8\xae\x7e\xd5\xe5\x90\x04\x7c\xb3\x0c\xf7\x89\x80\x61\x47\x29\x08\xdc\xba\x15\x38\xf0\x61\x1e\xc7\xe4\x67\x1c\x93\xc8\xb3\x92\xaf\x7e\xa5\x2f\x81\x80\xac\xb6\xe8\x2a\x48\x85\x64\x31\x9a\x9d\x9f\xed\x6e\x90\x65\xcf\x26\x38\x26\x13\x91\x26\x09\xe3\x72\xfa\x74\x8c\xae\x75\x98\x67\x22\x44\x7c\x3d\x2a\xfe\x52\xff\x63\x1c\x5d\xeb\x42\x31\x12\x5c\x8f\xfc\xee\x15\xe6\x48\xb4\xee\x93\x19\x10\xb8\x1e\x1d\x57\x50\x7d\x31\xc5\xc7\x63\xf4\xff\xfe\x48\x99\xfc\xcf\x02\xab\xec\xaf\xea\xd3\xe2\x09\xe3\xf9\xc3\x0c\xcb\xec\xff\x9e\x07\xee\x47\x73\xc3\xb9\x8b\xab\xef\x48\x4c\x64\x76\x29\x30\xdb\xd6\x34\x81\x49\x80\x66\xbf\xee\xb8\xab\x28\x23\x02\xac\x0c\xca\xf4\x87\xcf\x8c\xc2\x04\xdf\x61\x0e\x93\x8c\x8e\xd9\x0f\x7e\x17\x06\xb3\x69\x5b\x5c\x74\x99\x28\xbf\x26\xd8\xc2\xd6\x7e\x63\x30\x04\xa1\x14\xe8\x04\x27\x38\x20\xd2\xaa\x03\x0a\xe1\xb5\xed\x76\xa0\xf3\x05\xe7\x52\x87\xad\x57\x9c\x09\x15\x12\xd3\x40\x77\x3b\x18\x34\xab\xf0\xa8\x4f\x00\x7b\xbd\xe9\x18\x7f\x5a\x90\xcf\x56\x8a\x74\x72\x27\x26\xb4\xf7\xd8\xc1\x2b\xfc\xf2\x98\x6d\x9e\xe0\x37\xf4\x4c\x69\x26\x95\xbb\xf4\xf3\x95\x6e\x8c\x81\xae\x8a\x40\x30\x2d\xa1\x96\xda\x79\x9b\x04\x93\xdd\xe3\xe9\x0f\xa9\x80\x49\xfe\xfa\x24\x3f\x8b\x4f\x56\x8c\x4f\xb4\x88\xe2\x68\x77\xe3\xf6\xa9\x8e\x7f\x94\x7f\x7a\x29\x70\x8e\x57\x4b\x83\x7b\x23\x73\x3d\x3a\x6e\xaf\x51\xdf\x05\xef\x40\xb2\xc2\x0b\xed\xcf\x59\x82\x73\xc2\xb1\x8b\x43\xa9\xbb\x8b\xc5\x9b\x7f\x91\xe8\x4f\x05\xf7\x5b\x16\xa5\x31\xb8\xe8\x49\x97\x40\xae\xc9\x1a\x2f\xb7\x12\xfc\x12\xe0\x96\x51\x15\xac\xff\xe3\x1f\x43\xc5\xac\x76\xce\x8e\xcd\xe8\x76\x6e\xd2\x1d\x1b\x87\xc1\xe2\x18\x0c\x98\x99\xe4\x0d\x79\x6c\x9b\xed\x4e\x0b\xd2\x14\xc1\xc6\xce\xd4\x72\x04\x1b\xe4\xe7\x90\x70\x10\xca\x7f\x45\x98\xa2\x57\x6f\x17\x93\x56\xdb\x04\xf4\xe1\xf2\xf4\x12\xfd\x82\x23\x12\x96\x19\x4a\x1a\xe3\x24\x81\x10\xad\x08\x64\xce\x71\x88\xe4\x86\xb3\x3b\x05\x04\x38\x67\xee\x85\x65\xf7\x86\x40\xdd\x8d\x06\xc9\x49\x20\x4e\x58\xa4\xce\xe6\xf5\xb2\x62\x8b\x1f\xbd\xe6\x98\xa6\x11\xe6\x8a\xbd\xce\xee\x74\x75\xd0\x90\x3b\x47\x9c\xe1\xff\xd7\x17\x41\x78\xe9\x5f\x95\x1a\x86\xc5\x0c\x72\x20\xd7\xc1\xd7\xe5\x36\x8b\xc8\x66\x7e\x60\x79\x97\x5d\x77\xb5\xd0\x17\xf9\x77\x0d\x28\x42\x16\x88\xdf\x7e\xdc\x48\x99\x88\xe7\xd3\xa9\xfa\xeb\x08\xdf\x89\x23\x1c\xe3\xcf\x8c\x1e\x05\x2c\x9e\xce\xfe\xb9\xd0\xdd\x7a\x7e\x2e\xc6\x4c\xd5\xe1\x59\xc8\xe9\xff\x08\xe0\xaf\x53\x12\xc2\x14\xdf\x89\xc9\x4e\x04\x26\x58\x4c\xf2\x35\x05\xa5\x80\x1d\x29\x61\x7f\xea\xac\x06\xfb\x96\xb1\xdb\x4e\x1f\x08\x75\x75\x46\x6a\x53\x6e\xe7\x4a\x17\x9a\x55\x54\x2b\x3a\x84\xae\x1e\xbe\x1a\x6e\x88\xea\x26\x2f\x89\x37\xd4\x4f\x0c\x22\xe5\x59\x0c\xe2\xec\x54\x1b\xba\x93\xb3\xd3\xf7\x9e\xd1\x8b\xea\xc8\x3a\xfb\xee\x31\xb0\x30\xa8\x05\xfc\x1e\xa8\xf8\x2b\x02\x15\x62\xdd\xb5\x73\xa2\x8e\x3d\xc8\xd2\xe4\xaa\x05\xcd\x7b\x07\xfa\x1e\x47\x71\x12\xb3\x07\x8d\xa3\x2c\x99\x94\x11\x70\x16\xdc\x80\x63\xfd\x67\x69\x77\x5e\x56\x87\x76\x2a\xef\xe2\x4d\x19\xdd\x06\x81\x84\xd8\x14\xbd\x4b\xb2\x5c\x3d\x11\x3d\x0f\xac\x5e\x80\x8d\xcb\x0f\x22\x2c\x04\x09\xde\x31\x1c\xbe\xc4\x91\x3a\x4c\xf0\x0b\x1c\x3f\x4e\x71\x9c\xe5\xc5\xc5\x80\x74\x72\x6a\x99\xe3\x2b\xb2\x8a\x43\x25\x06\xa5\xff\xe1\x4f\x4a\x6f\xe0\x16\x72\xea\x6c\xc4\xe9\xc5\xe2\x00\x5b\x7f\x75\x92\x19\x4e\x1c\x86\x1c\x84\xb0\xc6\x44\x72\xab\x9b\xcf\x39\x09\xa9\x98\xe4\x43\x9e\x66\x89\x7d\x25\x04\xa7\x17\x0b\x14\x31\x76\x53\xef\x2d\xb5\x9f\x1e\x7b\x83\x20\xf6\xd9\xaf\x47\xc7\xf5\x15\xe8\x88\xc7\x7e\x8c\xf6\xda\xf4\x21\x62\x9e\xb0\x14\x97\x89\x24\x31\xf9\x0c\x56\x0f\xcb\x25\x86\x95\x35\x77\x15\xe8\xea\xd5\xcb\x85\x4e\x56\xc5\xe4\xb3\x76\x36\xf7\x7a\xe8\xaf\x4e\x7e\x6a\xfb\xb6\xb0\x14\x13\x56\xe0\xd5\x70\xc0\x5d\xd8\x55\xa0\xe3\xec\x6c\x3b\x62\x71\x3d\x3a\x6e\x2e\xd0\x6e\x4b\xef\x21\x9e\x3c\xcc\xa5\x38\x03\xe0\x39\x87\x15\xf9\x74\x2f\xa0\x07\x8f\x81\x17\x80\xc5\x29\x11\xd9\xe5\x35\xe7\x4e\x7e\x3b\x4a\x1b\x61\x18\xa7\xbb\x49\x97\x10\x81\x7c\xa5\xcb\xa0\x9b\x8d\x7c\x3b\xe6\xf2\x68\x23\x93\x9b\x38\xf2\x19\xd0\xc7\x7c\xba\x8f\xf9\x4e\xd6\xf0\x6a\xc9\x67\x42\xd7\x13\xb9\x81\x49\xfe\x9e\x67\xd3\x4e\x8b\xaf\xda\x06\x5b\x5a\x2d\x85\xd4\x8b\x80\x85\x70\x9c\xff\xf4\x62\xaa\xff\xca\xf1\xb3\x8b\xff\x37\x9f\xaa\x98\xb3\x50\xcc\x81\x2b\x99\xe9\x97\xb1\xf8\x57\xc9\x76\xb0\x5b\xe0\x9c\x84\xf0\xb2\x28\xc4\x38\x61\x71\x8c\x7d\x9b\xf8\xd6\xe4\xf0\x32\x07\x89\x3e\x66\xb1\x80\x8f\x7f\x17\xa8\xac\xf3\x48\x94\x5b\x91\xbd\xee\x25\xdc\x25\xd0\x4c\x5e\x33\xc8\xb9\xb8\xda\xe0\x1b\x17\x9c\xf0\xd6\x5a\x1f\xa5\x0b\x08\xba\x6e\x13\x42\xb4\x84\x15\xe3\xd0\x58\x61\x69\x27\xb3\xf6\x50\xd0\xba\x2a\xec\x42\xd3\x9e\x53\x58\xc8\xfa\x3d\x6b\xf6\xb8\xb2\x66\xd5\xab\x3b\x8e\x17\xb8\x76\x09\xb4\xd7\x96\x9b\x88\xdf\x73\x71\x39\xee\xa6\x6b\xbb\xdf\x0e\xf6\x7c\x0d\x52\x73\xe7\xaf\xec\x11\xe7\x76\x00\xce\x90\xcd\x4e\xa2\x03\x1f\x7f\x9d\x40\x1b\x29\x98\x25\x06\xf3\x06\xc3\xfb\x4f\x57\x1d\x30\xce\x2e\xe7\xd6\x03\x74\xa7\x27\x90\x0d\x7f\x1b\x8b\xb7\xb0\x3d\x3b\x75\x6e\xef\xd2\x82\xe0\x70\xec\xe8\x18\xfd\x4d\xa4\xa3\x5b\x58\xfb\x1f\x5b\x6a\xd3\xeb\x24\x27\xba\xc5\x9c\x60\x9a\x5d\x15\x7d\x8e\x3e\x5e\x8f\xd6\xc9\x4f\xd7\xa3\x8f\x88\x08\xf4\x3a\x6f\xe5\x33\x4f\x79\xc2\x04\xa0\xc5\xe2\x14\xfd\x98\x63\xf7\x74\xac\xde\x25\xec\x59\xfe\xee\x9c\xb3\x5b\x22\x08\xa3\x10\x22\x25\x0c\xea\x65\xfd\x8a\x08\x8a\x57\x3e\x6c\x38\x4b\xd7\x9b\x24\x95\xa8\x3c\xd0\xa3\x37\xa7\xf9\x6b\xb2\x78\xed\x84\x45\xfa\xb1\x5f\x85\xb9\x69\x31\x99\x8f\x95\x05\xa3\xd7\xc9\x4f\xd9\x7f\x8a\xb3\xc1\xfe\xf5\x55\x87\x13\xf6\xac\x35\xdc\xbc\xe4\xea\x28\x11\xb4\x47\xd9\xa9\x50\x1b\x29\xdb\x23\x2d\x84\xa9\x88\xcb\x3a\xf9\xa9\xfe\x1b\xd0\x34\x6e\x7f\x7a\xa2\xf9\x9a\x32\x96\xec\x59\xf3\x91\x08\xda\x8f\xe4\xb3\xaa\x55\xac\x7c\xa9\xe2\x49\x43\x46\xbf\x97\x4a\x34\x3c\x84\x46\xd0\xa5\xbe\x7a\xd3\xba\xeb\xc7\x7e\x7b\x3c\xc4\x16\x82\xb1\xfb\x50\xfb\x72\x2e\xb6\xd8\x9b\xd9\xfe\x98\x2d\x71\xc7\x26\x63\x37\xfe\xe6\x5d\xc5\x7e\xe2\x6d\x7b\x32\x2e\x71\xf2\x0e\x0f\xc2\x96\x65\xd8\x77\xee\x72\x39\x88\x9a\x63\xce\xdd\x41\x9c\xfc\xc7\x41\x7a\xbe\xd7\x6a\xf5\x2b\x2d\x95\xe4\x06\x4b\x7d\xc3\xbf\xcc\xbe\xe8\x4a\xfc\xb6\xd3\xee\xd8\xfe\xbd\xf7\x3c\x7a\x9a\x56\xaa\xf8\xa5\x39\xdb\xb3\xe7\xe3\x63\xb3\x30\x26\xf4\xa4\xf8\x3a\x56\x2f\xbf\xa6\xb8\x71\x37\x78\x24\xad\xec\x94\x87\xe9\x16\x5d\x55\xe5\xac\xbc\xe5\xb7\x8b\x48\xef\x8a\x13\xa6\xd5\x37\x27\x4c\xd4\xfe\x9e\xfe\x50\x99\x64\xc2\x56\x93\x02\x92\x5f\xe8\xad\x86\x5a\x3b\x30\x7d\x28\x32\xd7\xa3\x63\xe3\x72\x1b\x01\x3a\xaf\xbd\xc4\xc8\x6f\x13\x1b\x07\xd4\x25\x1d\x45\xa8\xc9\xb9\x3a\xe6\x56\x25\x15\x2d\xb1\x80\x10\xed\xbe\x12\xe2\x7e\xbf\xe6\x80\x29\xcc\x1a\xe4\xf8\x35\x85\x47\xdd\x72\x7b\xb7\xe7\xe9\xeb\x55\xde\xcd\x13\x1c\xc3\xf5\xbd\x1a\x33\x78\xc0\xbe\xb7\xdc\x48\xbf\x8f\x2e\xf8\xcd\xa5\x4e\x96\xb3\x30\x64\x74\x5e\xdc\x29\xf2\xce\x1c\xd5\x87\xf7\xd4\xf8\xae\x6e\xd1\x06\x39\xe9\x60\x73\x17\x97\x3c\x88\xdc\x49\xa3\x01\xcd\x8e\xed\x93\x0a\xbb\xb2\x2a\x3f\x1b\xb3\x1f\x9e\xd5\xa0\xd8\xe4\xc0\x6e\x5d\xa2\xe5\x19\x5d\xf3\xbe\x5f\xe1\xc1\x49\x72\x0e\xed\x98\x9d\xcf\xd8\x39\x87\x5b\x02\x77\xfd\x40\xa4\x92\x2d\x02\x1c\xf5\x74\x25\x02\xe0\x32\xbb\x5b\xd7\x73\xbc\xf5\x33\x90\x4e\xc3\x61\xd9\x8f\xe8\xb0\xea\x39\xee\x93\x04\x4e\x71\xd4\x51\x53\xd1\x39\x7e\x25\xac\x59\xde\xce\x71\x24\xc6\x6b\x78\x99\x92\x28\xec\x49\xe7\x4f\xef\xed\x0d\x86\x0f\xfc\xd6\x4c\x0d\x37\xb3\x64\x59\x28\x68\x91\x23\x83\x72\xd8\x65\xbe\x21\x0c\x0d\x5a\x37\x58\x3e\x36\x6a\x6d\x93\x4c\x66\xf1\xbc\x0f\x6b\xa7\x4c\x4d\xef\x8b\xb4\x66\x20\x16\xbb\xb6\x27\x69\x6f\x29\x55\xad\x06\x2a\x0c\xf6\xde\x66\x11\xeb\xc3\x1e\x93\xb3\xa5\x4e\xd9\x9c\xd8\xfb\x49\xd0\x34\x5e\xda\xc2\xb9\x8c\x9e\x82\x3a\xee\xbe\xc4\x02\x0e\xaa\xfa\x29\x00\xcd\x81\x07\x40\x25\x5e\xc3\x6c\xc9\x6e\xe1\x60\xb8\x22\x61\x32\xef\xf8\x46\x18\x5d\x48\x8e\x25\xac\xfb\x7d\xd2\x2b\x61\xb2\x10\x99\x39\x63\xed\x3a\x02\x3b\x3e\x7e\xa6\xa3\x26\x28\x26\x3e\xed\xa3\xbf\x27\x59\x3b\xd7\xb8\x9f\x94\x03\xda\x00\xf3\x29\xe8\x4a\x4d\xbc\xcb\xeb\x96\xb9\x54\xf5\x78\x52\x3e\x9e\xba\xdf\x87\xe8\x9a\xac\x95\x24\x6d\xcc\x72\x3d\x3a\xae\xa3\x63\xb8\xb5\x50\x4d\x47\x3a\x9f\xc4\xce\x4e\x1f\x65\x46\x2b\x43\x0e\x44\xb5\x91\x6c\x11\x5f\x44\x79\x6f\x88\x3c\xd1\xde\x2f\x39\xdd\x6b\x02\xeb\x81\xe5\x1d\x0b\x70\x74\x48\x0e\x3f\xff\x7a\x15\x6e\xe0\x80\x94\xd8\x47\xe5\x47\xad\x0e\x59\x6a\x4f\xd8\x15\xbe\x4a\x9e\x5a\xb2\xe7\x8a\x04\x0b\xdd\x06\x73\x00\x1a\x64\x7d\xa8\x6a\x98\xe6\x4d\x59\x71\xcc\xe8\x5a\x6f\xb6\xbb\xe6\xa1\x88\xd0\xde\x15\x1d\xc3\x4f\x68\xa7\x96\x97\x2d\xde\xa9\xa6\x99\xc8\x46\xe9\x1b\xc4\x20\x06\x8c\x4a\xce\x22\xd1\xd2\x85\x8e\x82\x74\x97\x70\x9f\x2b\x4c\x8b\x45\x5b\xbc\x71\x3b\xfd\x45\xac\xdf\xc9\x2b\x6b\x40\xfa\x16\x7a\xed\xd0\xe5\xe0\xbe\xc9\xe1\x12\xc0\x1c\x4b\xeb\xd9\xab\xd3\x47\x60\x29\x0f\xea\xed\x67\xcf\xfe\xba\x3a\xad\xbe\x42\xaf\xb9\x67\x25\x8b\x91\x5b\x56\x2e\xec\x27\xce\xc0\x67\x08\x6d\x44\x76\xd7\x2c\xea\x3b\xbc\x4e\x41\x1c\x12\x3f\xf1\x81\x5e\x53\xa1\xcb\x76\x1f\x2c\xfb\x5d\x46\x16\xc7\x44\x16\x23\xce\x31\x25\x2b\x10\xed\xba\x1d\x27\x85\xd2\xb9\xcb\x41\xe3\x82\xf7\xf3\xfd\x3f\x0e\x38\xbc\xa4\xf6\x1b\x78\x96\x7d\xcb\xa5\xa4\x4c\x59\xe6\x37\x10\xb5\x2a\xdf\x07\x3a\xea\xdb\xb8\xd5\x62\x82\x91\x86\x26\x3c\x4d\x64\x19\x44\x4b\x7c\x7a\x79\x29\x49\x2f\x5a\x9f\x95\x5d\x28\x6f\x00\x92\x5a\xeb\xd2\xec\x6e\x3c\x34\x1a\x79\xa9\xad\x59\x6c\x69\x70\x3f\x5d\xc6\x86\xc1\xac\xa6\x9d\x73\xdb\xd7\xfd\xed\x5b\x5c\x49\xfe\xa2\x43\x78\xfe\xed\xbd\x47\x60\xed\xab\x01\x1e\x9d\x2e\xf3\xf5\x06\xad\x5a\xe5\xa5\x18\xc5\xdc\x63\x27\xaa\x0d\x22\xe0\xd5\x16\xaa\x79\x8f\x34\xfd\x11\x8c\xb2\x05\xbe\xef\xa7\x89\x9c\x01\x36\xc4\xa9\xd5\x1c\xdd\x26\x47\x2c\x95\x49\x2a\x1d\xfc\x0d\x5f\x73\x9a\x95\x2a\x0d\x0a\x34\xdb\xc0\x1f\xf8\xd6\x7b\x3e\xa9\x69\x6d\x63\x23\x19\x87\xb6\x94\x21\x48\x4c\xa2\xbc\x99\xe1\x1f\x29\x09\x6e\x84\xc4\x5c\x16\x8d\xe1\xcb\xbe\x87\xa0\xde\x68\x5a\x20\x1c\x96\x26\x6b\x80\x06\x8c\xf7\x85\x4a\x4d\x78\xdf\xd7\xbb\x6c\xda\x9b\x85\x72\x4c\xed\x19\x8a\x5e\x02\x06\x31\x26\xc3\x3a\x2b\xab\x28\xfd\x34\xb8\x72\x25\x58\x6e\x1e\x97\x99\xcf\xad\xd1\x62\xf1\xc6\xed\xf0\xe2\xb7\xde\x94\x0f\xcb\x94\x54\xd8\x13\x36\xf7\x64\x45\xd4\x12\xc6\x2d\xd9\x6d\xf1\xd4\x24\x39\x4d\xc4\x5b\xf2\xda\xc9\x87\x07\xf7\xdb\x9a\x4d\x55\x77\xd7\x7a\xb3\xa6\xac\xf7\xe3\x93\xed\x9f\xb5\x66\x63\x16\x10\x70\x90\x22\x2f\x12\x74\x4a\xbb\xdc\xc0\xd6\xf8\x11\x61\x9b\x79\xca\xdf\x77\x3d\xc4\x7b\x49\x93\x0d\x97\x61\x5c\x96\x6a\x38\xfa\xed\xf9\x02\x41\x49\xa5\xe2\x7b\x02\x87\xf8\x2f\x2e\xd0\x6b\xbc\xea\xd1\x2f\xa7\xc2\x4c\x8b\x5e\xb7\x42\x8e\x14\x9d\xcd\x8b\xdb\xe8\xca\x49\xd7\xdf\x1f\x2b\xbe\x1e\xee\xbc\xdc\x3d\x60\x9e\x14\xac\xfe\xfa\xe4\xeb\x93\xff\x0b\x00\x00\xff\xff\x42\xbb\xdc\xa6\x26\x97\x00\x00")

func schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaJson,
		"schema.json",
	)
}

func schemaJson() (*asset, error) {
	bytes, err := schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x2d, 0xd9, 0xd, 0x19, 0x4e, 0x5a, 0xef, 0x68, 0xd7, 0x45, 0x25, 0x87, 0x8b, 0x60, 0xe, 0x62, 0x46, 0xf6, 0x7d, 0x1a, 0x79, 0xa, 0xd1, 0xa5, 0x1b, 0x1f, 0x6, 0x13, 0xff, 0xb0, 0x11}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema.json": schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema.json": &bintree{schemaJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
